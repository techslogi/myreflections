What happens when you initialize a repository? Why do you need to do it?

	It creates a git repository on the specified folder. You need to do
	this or else you won't be able to use git at all. Init creates the
	necessary folders and files.
	
How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is a temporary place where files get added, where 
	they wait for commits to be made, including them.
	
How can you use the staging area to make sure you have one commit per logical change?

	It allows me to see exactly which files and lines where modified, 
	ensuring that there's only one logical change.
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Different versions, different logic in the code, experimental stuff,
	languages, etc.
	
How do the diagrams help you visualize the branch structure?

	It works similar to a timeline, as in ever branch follows a specific
	path as to where changes led to.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Changes made in a branch get merged into another, creating one. We
	represent it that way because the two became one, and the commits
	aren't discarded.